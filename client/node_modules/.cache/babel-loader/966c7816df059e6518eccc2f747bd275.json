{"ast":null,"code":"//Part of redux stuff \n//A reducer is a function that accepts the state and action \n//based on action type, we want to do some logic \n//return state based on the action \n//notes is the state\nexport default ((notes = [], action) => {\n  //console.log(\"we here\")\n  //console.log(\"action type is\" + action.type)\n  switch (action.type) {\n    case 'FETCH_ALL':\n      //console.log(\"we here part 2\")\n      return notes;\n\n    case 'CREATE':\n      return [...notes, action.payload];\n\n    default:\n      //console.log(\"we here part 3\")\n      return notes;\n  }\n});","map":{"version":3,"sources":["/Users/ileghari/Documents/Projects/notes-email-website/client/src/reducers/notes.js"],"names":["notes","action","type","payload"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAGA,gBAAe,CAACA,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC;AACA;AACA,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI;AACA,aAAOF,KAAP;;AACJ,SAAK,QAAL;AACI,aAAO,CAAC,GAAIA,KAAL,EAAYC,MAAM,CAACE,OAAnB,CAAP;;AACJ;AACI;AACA,aAAOH,KAAP;AARR;AAUH,CAbD","sourcesContent":["//Part of redux stuff \n\n//A reducer is a function that accepts the state and action \n//based on action type, we want to do some logic \n//return state based on the action \n//notes is the state\n\n\nexport default (notes = [], action) => {\n    //console.log(\"we here\")\n    //console.log(\"action type is\" + action.type)\n    switch(action.type){\n        case 'FETCH_ALL':\n            //console.log(\"we here part 2\")\n            return notes;\n        case 'CREATE':\n            return [... notes, action.payload];\n        default:\n            //console.log(\"we here part 3\")\n            return notes;      \n    }\n};"]},"metadata":{},"sourceType":"module"}