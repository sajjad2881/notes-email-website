{"ast":null,"code":"//Part of redux stuff\nimport * as api from '../api'; //Action creators -- function that return actions\n//action is just an opject with type and payload\n//redux thunk allows us to specify an additional arrow function\n//function that returns another function with async capabilities\n\nexport const getNotes = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchNotes();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  } // const action = {type: 'FETCH_ALL,', payload: [] }\n  // dispatch(action);\n\n};\nexport const createNote = note => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createNote(note);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updateNote = (id, note) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateNote(id, note);\n    dispatch({\n      type: 'UPDATE ',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/ileghari/Documents/Projects/notes-email-website/client/src/actions/notes.js"],"names":["api","getNotes","dispatch","data","fetchNotes","type","payload","error","console","log","message","createNote","note","updateNote","id"],"mappings":"AAAA;AAEA,OAAO,KAAKA,GAAZ,MAAqB,QAArB,C,CAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,GAN+C,CAQhD;AACA;;AACD,CAVM;AAYP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACtD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACW,UAAJ,CAAeC,IAAf,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CAPM;AASP,OAAO,MAAMG,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOV,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACa,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAEH;AAA5B,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARM","sourcesContent":["//Part of redux stuff\n\nimport * as api from '../api';\n\n//Action creators -- function that return actions\n//action is just an opject with type and payload\n//redux thunk allows us to specify an additional arrow function\n//function that returns another function with async capabilities\nexport const getNotes = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchNotes();\n    dispatch({ type: 'FETCH_ALL', payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n\n  // const action = {type: 'FETCH_ALL,', payload: [] }\n  // dispatch(action);\n};\n\nexport const createNote = (note) => async (dispatch) => {\n  try {\n    const { data } = await api.createNote(note);\n    dispatch({ type: 'CREATE', payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updateNote = (id, note) => async (dispatch) => {\n  try {\n    const { data } = await api.updateNote(id, note);\n\n    dispatch({ type: 'UPDATE ', payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}