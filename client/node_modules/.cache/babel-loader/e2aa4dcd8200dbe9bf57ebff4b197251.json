{"ast":null,"code":"var _jsxFileName = \"/Users/ileghari/Documents/Projects/notes-email-website/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper, Checkbox } from '@material-ui/core';\nimport useStyles from './styles';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { createNote } from '../../actions/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [noteData, setNoteData] = useState({\n    creator: '',\n    title: '',\n    content: '',\n    //here for message\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const clear = () => {//setCurrentId(0);\n    //setNoteData({ creator: '', title: '', content: '', community: '',tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(createNote(noteData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Add a Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: noteData.creator,\n        onChange: e => setNoteData({ ...noteData,\n          creator: e.target.value\n        }) //spreading it so that it is not overwritten\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: noteData.title,\n        onChange: e => setNoteData({ ...noteData,\n          title: e.target.value\n        }) //spreading it so that it is not overwritten\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"content\",\n        variant: \"outlined\",\n        label: \"Content\",\n        fullWidth: true,\n        value: noteData.content,\n        onChange: e => setNoteData({ ...noteData,\n          content: e.target.value\n        }) //spreading it so that it is not overwritten\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: noteData.tags,\n        onChange: e => setNoteData({ ...noteData,\n          tags: e.target.value\n        }) //spreading it so that it is not overwritten\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"community\",\n        variant: \"outlined\",\n        label: \"Community\",\n        fullWidth: true,\n        value: noteData.community,\n        onChange: e => setNoteData({ ...noteData,\n          community: e.target.value\n        }) //spreading it so that it is not overwritten\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setNoteData({ ...noteData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"cNRbbKCqBMJXJlAFFrNaLaFAUaA=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/ileghari/Documents/Projects/notes-email-website/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","Checkbox","useStyles","FileBase","useDispatch","createNote","Form","noteData","setNoteData","creator","title","content","tags","selectedFile","classes","dispatch","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","community","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {TextField, Button, Typography, Paper, Checkbox} from '@material-ui/core'\nimport useStyles from './styles'\nimport  FileBase from 'react-file-base64'\nimport { useDispatch} from 'react-redux'\nimport {createNote} from '../../actions/notes'\n\n\nconst Form = () => {\n    const [noteData, setNoteData] = useState({\n        creator: '',\n        title: '',\n        content: '', //here for message\n        tags: '',\n        selectedFile: '',\n    });\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const clear = () => {\n        //setCurrentId(0);\n        //setNoteData({ creator: '', title: '', content: '', community: '',tags: '', selectedFile: '' });\n      };\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(createNote(noteData))\n    } \n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`}  onSubmit={handleSubmit} >\n                <Typography variant=\"h6\">Add a Note</Typography>\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={noteData.creator} onChange={(e) => setNoteData({ ...noteData, creator: e.target.value})} //spreading it so that it is not overwritten\n                />\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={noteData.title} onChange={(e) => setNoteData({ ...noteData, title: e.target.value})} //spreading it so that it is not overwritten\n                />\n                <TextField name=\"content\" variant=\"outlined\" label=\"Content\" fullWidth value={noteData.content} onChange={(e) => setNoteData({ ...noteData, content: e.target.value})} //spreading it so that it is not overwritten\n                />\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={noteData.tags} onChange={(e) => setNoteData({ ...noteData, tags: e.target.value})} //spreading it so that it is not overwritten\n                />\n                <TextField name=\"community\" variant=\"outlined\" label=\"Community\" fullWidth value={noteData.community} onChange={(e) => setNoteData({ ...noteData, community: e.target.value})} //spreading it so that it is not overwritten\n                />\n                 <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setNoteData({ ...noteData, selectedFile: base64 })} /></div>\n                 <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                 <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}