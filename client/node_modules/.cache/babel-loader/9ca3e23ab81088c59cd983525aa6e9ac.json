{"ast":null,"code":"var _jsxFileName = \"/Users/ileghari/Documents/Projects/notes-email-website/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper, Checkbox } from '@material-ui/core';\nimport useStyles from './styles';\nimport FileBase from 'react-file-base64';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createNote, updateNote } from '../../actions/notes'; // GET THE CURRENT ID\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [noteData, setNoteData] = useState({\n    creator: '',\n    title: '',\n    content: '',\n    //here for message\n    tags: '',\n    selectedFile: ''\n  });\n  const notes = useSelector(state => state.notes);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const clear = () => {//setCurrentId(0);\n    //setNoteData({ creator: '', title: '', content: '', community: '',tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateNote(currentId, noteData));\n    } else {\n      dispatch(createNote(noteData));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Add a Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: noteData.creator,\n        onChange: e => setNoteData({ ...noteData,\n          creator: e.target.value\n        }) //spreading it so that it is not overwritten\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: noteData.title,\n        onChange: e => setNoteData({ ...noteData,\n          title: e.target.value\n        }) //spreading it so that it is not overwritten\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"content\",\n        variant: \"outlined\",\n        label: \"Content\",\n        fullWidth: true,\n        value: noteData.content,\n        onChange: e => setNoteData({ ...noteData,\n          content: e.target.value\n        }) //spreading it so that it is not overwritten\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: noteData.tags,\n        onChange: e => setNoteData({ ...noteData,\n          tags: e.target.value\n        }) //spreading it so that it is not overwritten\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"community\",\n        variant: \"outlined\",\n        label: \"Community\",\n        fullWidth: true,\n        value: noteData.community,\n        onChange: e => setNoteData({ ...noteData,\n          community: e.target.value\n        }) //spreading it so that it is not overwritten\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setNoteData({ ...noteData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"yCxnACZhoDNxaunjE7E0oSn4sWk=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/ileghari/Documents/Projects/notes-email-website/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","Checkbox","useStyles","FileBase","useSelector","useDispatch","createNote","updateNote","Form","currentId","setCurrentId","noteData","setNoteData","creator","title","content","tags","selectedFile","notes","state","classes","dispatch","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","community","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  TextField,\n  Button,\n  Typography,\n  Paper,\n  Checkbox,\n} from '@material-ui/core';\nimport useStyles from './styles';\nimport FileBase from 'react-file-base64';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createNote, updateNote } from '../../actions/notes';\n\n// GET THE CURRENT ID\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [noteData, setNoteData] = useState({\n    creator: '',\n    title: '',\n    content: '', //here for message\n    tags: '',\n    selectedFile: '',\n  });\n  const notes = useSelector((state) => state.notes);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const clear = () => {\n    //setCurrentId(0);\n    //setNoteData({ creator: '', title: '', content: '', community: '',tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateNote(currentId, noteData));\n    } else {\n      dispatch(createNote(noteData));\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete='off'\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}>\n        <Typography variant='h6'>Add a Note</Typography>\n        <TextField\n          name='creator'\n          variant='outlined'\n          label='Creator'\n          fullWidth\n          value={noteData.creator}\n          onChange={(e) =>\n            setNoteData({ ...noteData, creator: e.target.value })\n          } //spreading it so that it is not overwritten\n        />\n        <TextField\n          name='title'\n          variant='outlined'\n          label='Title'\n          fullWidth\n          value={noteData.title}\n          onChange={(e) => setNoteData({ ...noteData, title: e.target.value })} //spreading it so that it is not overwritten\n        />\n        <TextField\n          name='content'\n          variant='outlined'\n          label='Content'\n          fullWidth\n          value={noteData.content}\n          onChange={(e) =>\n            setNoteData({ ...noteData, content: e.target.value })\n          } //spreading it so that it is not overwritten\n        />\n        <TextField\n          name='tags'\n          variant='outlined'\n          label='Tags'\n          fullWidth\n          value={noteData.tags}\n          onChange={(e) => setNoteData({ ...noteData, tags: e.target.value })} //spreading it so that it is not overwritten\n        />\n        <TextField\n          name='community'\n          variant='outlined'\n          label='Community'\n          fullWidth\n          value={noteData.community}\n          onChange={(e) =>\n            setNoteData({ ...noteData, community: e.target.value })\n          } //spreading it so that it is not overwritten\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type='file'\n            multiple={false}\n            onDone={({ base64 }) =>\n              setNoteData({ ...noteData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant='contained'\n          color='primary'\n          size='large'\n          type='submit'\n          fullWidth>\n          Submit\n        </Button>\n        <Button\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={clear}\n          fullWidth>\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}